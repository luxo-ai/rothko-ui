@use '../../../styles/mixins' as mixins;
@use './variables' as variables;

.toast__close-button {
  margin-top: 0.125rem;
  display: block;
  margin-left: auto;
}

.toast__animated-backdrop {
  background: variables.$rothkoBackground;
  border-radius: 0.125rem;
  /*
  box-shadow: 0 1px 4px rgb(28 28 28 / 10%), 0 4px 6px rgb(28 28 28 / 4%),
    0 8px 16px rgb(28 28 28 / 4%), 0 10px 20px 2px rgb(28 28 28 / 2%),
    0 12px 24px 4px rgb(28 28 28 / 4%);
    */
  position: relative;
}

.toast__animated-life {
  position: absolute;
  bottom: 0;
  left: 0px;
  width: auto;
  background-image: linear-gradient(
    130deg,
    variables.$toastLifeFilledBackground,
    variables.$toastLifeFilledBackground
  );

  @each $kind in variables.$rothkoKinds {
    &--#{$kind} {
      background-image: linear-gradient(
        130deg,
        variables.safeGetTheme($kind),
        variables.safeGetTheme($kind, $scale: '100')
      );
    }
  }

  height: 0.2rem;
}

.toast {
  flex-wrap: wrap-reverse;
  display: flex;
  gap: 0.5rem;
  align-items: flex-end;
  justify-content: space-between;
  padding: 1rem 0.75rem;
  background-color: variables.$toastBackground;
  border-radius: 0.125rem;

  @each $kind in variables.$rothkoKinds {
    &--#{$kind} {
      background-color: variables.safeGetTheme($kind);
    }
  }
}

.toast__content-container {
  display: flex;
  flex-direction: column;
  gap: 0.1rem;

  @include mixins.textChildrenColor($color: variables.$toastForeground);

  @each $kind in variables.$rothkoKinds {
    &--#{$kind} {
      @include mixins.textChildrenColor($color: variables.safeGetThemeForeground($kind));
    }
  }
}

.toasts {
  position: fixed;
  display: flex;
  flex-direction: column;
  gap: 1rem;

  bottom: 0.75rem;
  margin: 0.25rem 1rem;

  min-width: 10rem;
  max-width: max(18rem, 20%);
  right: 0rem;

  // tablet or mobile max width
  @media only screen and (min-width: 800px) {
    right: 0.75rem;
    max-width: max(32rem, 20%);
    min-width: 15rem;
  }

  z-index: 99999;
}
